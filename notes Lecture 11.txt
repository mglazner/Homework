Take tinybabylibrary and HW10 and make it so you can choose which switches to run from the command line. Passing 'argv's into file to turn boolean switches on/off. 
You probably want to make sure that the program has defaults, rather than having to create each switch input every time. 
____________________

update hw10.rb ( to hw11 ) that will take a file name as a command line argument and do the calculations against that file instad of standard in. 


# Rails Environment Configuration.

---
git:
  user.name:  Megan Glazner
  user.email: ladyglazner@gmail.com
  version:    git version 1.8.1.msysgit.1

ruby:
  bin:        C:/RailsInstaller/Ruby1.9.3/bin/ruby.exe
  version:    ruby 1.9.3p392 (2013-02-22) [i386-mingw32]

rails:
  bin:        C:/RailsInstaller/Ruby1.9.3/bin/rails.bat
  version:    Rails 3.2.13

ssh:
  public_key_location: C:\Users\owner/.ssh/id_rsa.pub
  public_key_contents: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEArH1hJioDfeh9bgMsASgo1
+1k3yXbJq5qGc/75Ac3cz7Z2oqRBlFszd8VmNh/pidO+VWu/d9Ib6wYa2EMp0sEegxGvJ7w9itH0Zbxu
+z+vieNOBTndXTvfGfueToUrHkMKFrDl0IoBWVSyD6MSUoAre96EgDZDPiJdKITuNB8HBPXtGHHa8buz
hKrcGVeKJzK5JDCYYGWmWERoESBswCoEbffqBQ1W625RwfYEUc4kq+KT6UQe8Fn3GhVqxgdUQl0xWUvV
fIPpLySIQXvKlECs2kVUJ431FsnsuXxLH28k0u2mEu+yQ7XYerOC+oIrG7yCS8GvvP08qbzNBFThsNfX
Q== Megan Glazner <ladyglazner@gmail.com>




C:\Homework>irb
irb(main):001:0> File.methods
=> [:directory?, :exist?, :exists?, :readable?, :readable_real?, :world_readable
?, :writable?, :writable_real?, :world_writable?, :executable?, :executable_real
?, :file?, :zero?, :size?, :size, :owned?, :grpowned?, :pipe?, :symlink?, :socke
t?, :blockdev?, :chardev?, :setuid?, :setgid?, :sticky?, :identical?, :stat, :ls
tat, :ftype, :atime, :mtime, :ctime, :utime, :chmod, :chown, :lchmod, :lchown, :
link, :symlink, :readlink, :unlink, :delete, :rename, :umask, :truncate, :expand
_path, :absolute_path, :realpath, :realdirpath, :basename, :dirname, :extname, :
path, :split, :join, :fnmatch, :fnmatch?, :new, :open, :sysopen, :for_fd, :popen
, :foreach, :readlines, :read, :binread, :write, :binwrite, :select, :pipe, :try
_convert, :copy_stream, :allocate, :superclass, :freeze, :===, :==, :<=>, :<, :<
=, :>, :>=, :to_s, :included_modules, :include?, :name, :ancestors, :instance_me
thods, :public_instance_methods, :protected_instance_methods, :private_instance_
methods, :constants, :const_get, :const_set, :const_defined?, :const_missing, :c
lass_variables, :remove_class_variable, :class_variable_get, :class_variable_set
, :class_variable_defined?, :public_constant, :private_constant, :module_exec, :
class_exec, :module_eval, :class_eval, :method_defined?, :public_method_defined?
, :private_method_defined?, :protected_method_defined?, :public_class_method, :p
rivate_class_method, :autoload, :autoload?, :instance_method, :public_instance_m
ethod, :nil?, :=~, :!~, :eql?, :hash, :class, :singleton_class, :clone, :dup, :i
nitialize_dup, :initialize_clone, :taint, :tainted?, :untaint, :untrust, :untrus
ted?, :trust, :frozen?, :inspect, :methods, :singleton_methods, :protected_metho
ds, :private_methods, :public_methods, :instance_variables, :instance_variable_g
et, :instance_variable_set, :instance_variable_defined?, :instance_of?, :kind_of
?, :is_a?, :tap, :send, :public_send, :respond_to?, :respond_to_missing?, :exten
d, :display, :method, :public_method, :define_singleton_method, :object_id, :to_
enum, :enum_for, :equal?, :!, :!=, :instance_eval, :instance_exec, :__send__, :_
_id__]
irb(main):002:0> puts File.methods
directory?
exist?
exists?
readable?
readable_real?
world_readable?
writable?
writable_real?
world_writable?
executable?
executable_real?
file?
zero?
size?
size
owned?
grpowned?
pipe?
symlink?
socket?
blockdev?
chardev?
setuid?
setgid?
sticky?
identical?
stat
lstat
ftype
atime
mtime
ctime
utime
chmod
chown
lchmod
lchown
link
symlink
readlink
unlink
delete
rename
umask
truncate
expand_path
absolute_path
realpath
realdirpath
basename
dirname
extname
path
split
join
fnmatch
fnmatch?
new
open
sysopen
for_fd
popen
foreach
readlines
read
binread
write
binwrite
select
pipe
try_convert
copy_stream
allocate
superclass
freeze
===
==
<=>
<
<=
>
>=
to_s
included_modules
include?
name
ancestors
instance_methods
public_instance_methods
protected_instance_methods
private_instance_methods
constants
const_get
const_set
const_defined?
const_missing
class_variables
remove_class_variable
class_variable_get
class_variable_set
class_variable_defined?
public_constant
private_constant
module_exec
class_exec
module_eval
class_eval
method_defined?
public_method_defined?
private_method_defined?
protected_method_defined?
public_class_method
private_class_method
autoload
autoload?
instance_method
public_instance_method
nil?
=~
!~
eql?
hash
class
singleton_class
clone
dup
initialize_dup
initialize_clone
taint
tainted?
untaint
untrust
untrusted?
trust
frozen?
inspect
methods
singleton_methods
protected_methods
private_methods
public_methods
instance_variables
instance_variable_get
instance_variable_set
instance_variable_defined?
instance_of?
kind_of?
is_a?
tap
send
public_send
respond_to?
respond_to_missing?
extend
display
method
public_method
define_singleton_method
object_id
to_enum
enum_for
equal?
!
!=
instance_eval
instance_exec
__send__
__id__
=> nil
irb(main):003:0> File.methods-Object.methods
=> [:directory?, :exist?, :exists?, :readable?, :readable_real?, :world_readable
?, :writable?, :writable_real?, :world_writable?, :executable?, :executable_real
?, :file?, :zero?, :size?, :size, :owned?, :grpowned?, :pipe?, :symlink?, :socke
t?, :blockdev?, :chardev?, :setuid?, :setgid?, :sticky?, :identical?, :stat, :ls
tat, :ftype, :atime, :mtime, :ctime, :utime, :chmod, :chown, :lchmod, :lchown, :
link, :symlink, :readlink, :unlink, :delete, :rename, :umask, :truncate, :expand
_path, :absolute_path, :realpath, :realdirpath, :basename, :dirname, :extname, :
path, :split, :join, :fnmatch, :fnmatch?, :open, :sysopen, :for_fd, :popen, :for
each, :readlines, :read, :binread, :write, :binwrite, :select, :pipe, :try_conve
rt, :copy_stream]
irb(main):004:0> p File.methods-Object.methods
[:directory?, :exist?, :exists?, :readable?, :readable_real?, :world_readable?,
:writable?, :writable_real?, :world_writable?, :executable?, :executable_real?,
:file?, :zero?, :size?, :size, :owned?, :grpowned?, :pipe?, :symlink?, :socket?,
 :blockdev?, :chardev?, :setuid?, :setgid?, :sticky?, :identical?, :stat, :lstat
, :ftype, :atime, :mtime, :ctime, :utime, :chmod, :chown, :lchmod, :lchown, :lin
k, :symlink, :readlink, :unlink, :delete, :rename, :umask, :truncate, :expand_pa
th, :absolute_path, :realpath, :realdirpath, :basename, :dirname, :extname, :pat
h, :split, :join, :fnmatch, :fnmatch?, :open, :sysopen, :for_fd, :popen, :foreac
h, :readlines, :read, :binread, :write, :binwrite, :select, :pipe, :try_convert,
 :copy_stream]
=> [:directory?, :exist?, :exists?, :readable?, :readable_real?, :world_readable
?, :writable?, :writable_real?, :world_writable?, :executable?, :executable_real
?, :file?, :zero?, :size?, :size, :owned?, :grpowned?, :pipe?, :symlink?, :socke
t?, :blockdev?, :chardev?, :setuid?, :setgid?, :sticky?, :identical?, :stat, :ls
tat, :ftype, :atime, :mtime, :ctime, :utime, :chmod, :chown, :lchmod, :lchown, :
link, :symlink, :readlink, :unlink, :delete, :rename, :umask, :truncate, :expand
_path, :absolute_path, :realpath, :realdirpath, :basename, :dirname, :extname, :
path, :split, :join, :fnmatch, :fnmatch?, :open, :sysopen, :for_fd, :popen, :for
each, :readlines, :read, :binread, :write, :binwrite, :select, :pipe, :try_conve
rt, :copy_stream]
irb(main):005:0> File.exists? "hw10.rb"
=> true
irb(main):006:0> File.readable? "hw10.rb"
=> true
irb(main):007:0> File.executable? "hw10.rb"
=> false
irb(main):008:0> File.open "HW10.rb"
=> #<File:HW10.rb>
irb(main):009:0> f=File.open "hw10.rb"
=> #<File:hw10.rb>
irb(main):010:0> f
=> #<File:hw10.rb>
irb(main):011:0> f.methods
=> [:lstat, :atime, :mtime, :ctime, :size, :chmod, :chown, :truncate, :flock, :p
ath, :to_path, :reopen, :print, :putc, :puts, :printf, :each, :each_line, :each_
byte, :each_char, :each_codepoint, :lines, :bytes, :chars, :codepoints, :syswrit
e, :sysread, :fileno, :to_i, :to_io, :fsync, :fdatasync, :sync, :sync=, :lineno,
 :lineno=, :readlines, :read_nonblock, :write_nonblock, :readpartial, :read, :wr
ite, :gets, :readline, :getc, :getbyte, :readchar, :readbyte, :ungetbyte, :unget
c, :<<, :flush, :tell, :seek, :rewind, :pos, :pos=, :eof, :eof?, :close_on_exec?
, :close_on_exec=, :close, :closed?, :close_read, :close_write, :isatty, :tty?,
:binmode, :binmode?, :sysseek, :advise, :ioctl, :fcntl, :pid, :inspect, :externa
l_encoding, :internal_encoding, :set_encoding, :autoclose?, :autoclose=, :stat,
:to_a, :entries, :sort, :sort_by, :grep, :count, :find, :detect, :find_index, :f
ind_all, :select, :reject, :collect, :map, :flat_map, :collect_concat, :inject,
:reduce, :partition, :group_by, :first, :all?, :any?, :one?, :none?, :min, :max,
 :minmax, :min_by, :max_by, :minmax_by, :member?, :include?, :each_with_index, :
reverse_each, :each_entry, :each_slice, :each_cons, :each_with_object, :zip, :ta
ke, :take_while, :drop, :drop_while, :cycle, :chunk, :slice_before, :nil?, :===,
 :=~, :!~, :eql?, :hash, :<=>, :class, :singleton_class, :clone, :dup, :initiali
ze_dup, :initialize_clone, :taint, :tainted?, :untaint, :untrust, :untrusted?, :
trust, :freeze, :frozen?, :to_s, :methods, :singleton_methods, :protected_method
s, :private_methods, :public_methods, :instance_variables, :instance_variable_ge
t, :instance_variable_set, :instance_variable_defined?, :instance_of?, :kind_of?
, :is_a?, :tap, :send, :public_send, :respond_to?, :respond_to_missing?, :extend
, :display, :method, :public_method, :define_singleton_method, :object_id, :to_e
num, :enum_for, :==, :equal?, :!, :!=, :instance_eval, :instance_exec, :__send__
, :__id__]
irb(main):012:0> puts f.methods-Object.methods
lstat
atime
mtime
ctime
size
chmod
chown
truncate
flock
path
to_path
reopen
print
putc
puts
printf
each
each_line
each_byte
each_char
each_codepoint
lines
bytes
chars
codepoints
syswrite
sysread
fileno
to_i
to_io
fsync
fdatasync
sync
sync=
lineno
lineno=
readlines
read_nonblock
write_nonblock
readpartial
read
write
gets
readline
getc
getbyte
readchar
readbyte
ungetbyte
ungetc
<<
flush
tell
seek
rewind
pos
pos=
eof
eof?
close_on_exec?
close_on_exec=
close
closed?
close_read
close_write
isatty
tty?
binmode
binmode?
sysseek
advise
ioctl
fcntl
pid
external_encoding
internal_encoding
set_encoding
autoclose?
autoclose=
stat
to_a
entries
sort
sort_by
grep
count
find
detect
find_index
find_all
select
reject
collect
map
flat_map
collect_concat
inject
reduce
partition
group_by
first
all?
any?
one?
none?
min
max
minmax
min_by
max_by
minmax_by
member?
each_with_index
reverse_each
each_entry
each_slice
each_cons
each_with_object
zip
take
take_while
drop
drop_while
cycle
chunk
slice_before
=> nil
irb(main):013:0> puts f
#<File:0x2e823b8>
=> nil
irb(main):014:0> f.gets
=> "require_relative \"tinybabylibrary\"\n"
irb(main):015:0> f.gets
=> "\n"
irb(main):016:0> f.gets
=> "p ARGV\n"
irb(main):017:0> f.gets
=> "\n"
irb(main):018:0> f.gets
=> "should_split = true\n"
irb(main):019:0> f.gets
=> "should_uppercase = true\n"
irb(main):020:0> f.gets
=> "should_subhyphen = true\n"
irb(main):021:0> f.gets
=> "should_wcount = true\n"
irb(main):022:0> f.gets
=> "should_pcount = true\n"
irb(main):023:0> f.gets
=> "should_sort = true\n"
irb(main):024:0> f.gets
=> "\n"
irb(main):025:0> f.read
=> "splitting=[]\nuppercase=[]\ngsubhyphen=\"\"\nwordcount=0\npunctcount=0\nalph
abetic=[]\n\nloop do  \n  s=$stdin.gets\n  if s!=\"exit\\n\"\n    splitting+=sep
arate_line(s) if should_split\n    splitting+=separate_line(s) if should_split \
n    uppercase+=upcase(s) if should_uppercase\n    gsubhyphen+=replace_spaces(s)
 if should_subhyphen \n    wordcount+=count_words(s) if should_wcount\n    (alph
abetic+=sort(s)).sort! if should_sort\n    punctcount+=count_punct(s) if should_
pcount \n  else\n    puts_results(splitting,uppercase,gsubhyphen,wordcount,punct
count,alphabetic)\n    break\n  end\nend\n\n#create a set of variables that we w
ill assign boolean values to, and those booleans will dictate whether we calcula
te and print each result\n"
irb(main):026:0> puts f.gets

=> nil
irb(main):027:0> f.seek 0
=> 0
irb(main):028:0> f.gets
=> "require_relative \"tinybabylibrary\"\n"
irb(main):029:0> f.seek 0
=> 0
irb(main):030:0> f.seek 5
=> 0
irb(main):031:0> f.gets
=> "re_relative \"tinybabylibrary\"\n"
irb(main):032:0> f.seek 0
=> 0
irb(main):033:0> f.read_line
NoMethodError: undefined method `read_line' for #<File:hw10.rb>
        from (irb):33
        from C:/RailsInstaller/Ruby1.9.3/bin/irb:12:in `<main>'
irb(main):034:0> f.readline
=> "require_relative \"tinybabylibrary\"\n"
irb(main):035:0> f.readline
=> "\n"
irb(main):036:0> f.readline do |m| puts m; puts m; end
=> "p ARGV\n"
irb(main):037:0> f.seek 0
=> 0
irb(main):038:0> f.readline
=> "require_relative \"tinybabylibrary\"\n"
irb(main):039:0> f.seek 0
=> 0
irb(main):040:0> puts f.methods-Object.methods
lstat
atime
mtime
ctime
size
chmod
chown
truncate
flock
path
to_path
reopen
print
putc
puts
printf
each
each_line
each_byte
each_char
each_codepoint
lines
bytes
chars
codepoints
syswrite
sysread
fileno
to_i
to_io
fsync
fdatasync
sync
sync=
lineno
lineno=
readlines
read_nonblock
write_nonblock
readpartial
read
write
gets
readline
getc
getbyte
readchar
readbyte
ungetbyte
ungetc
<<
flush
tell
seek
rewind
pos
pos=
eof
eof?
close_on_exec?
close_on_exec=
close
closed?
close_read
close_write
isatty
tty?
binmode
binmode?
sysseek
advise
ioctl
fcntl
pid
external_encoding
internal_encoding
set_encoding
autoclose?
autoclose=
stat
to_a
entries
sort
sort_by
grep
count
find
detect
find_index
find_all
select
reject
collect
map
flat_map
collect_concat
inject
reduce
partition
group_by
first
all?
any?
one?
none?
min
max
minmax
min_by
max_by
minmax_by
member?
each_with_index
reverse_each
each_entry
each_slice
each_cons
each_with_object
zip
take
take_while
drop
drop_while
cycle
chunk
slice_before
=> nil
irb(main):041:0> f.each_line
=> #<Enumerator: #<File:hw10.rb>:each_line>
irb(main):042:0> f.each_line do |m| puts m; puts m; end
require_relative "tinybabylibrary"
require_relative "tinybabylibrary"


p ARGV
p ARGV


should_split = true
should_split = true
should_uppercase = true
should_uppercase = true
should_subhyphen = true
should_subhyphen = true
should_wcount = true
should_wcount = true
should_pcount = true
should_pcount = true
should_sort = true
should_sort = true


splitting=[]
splitting=[]
uppercase=[]
uppercase=[]
gsubhyphen=""
gsubhyphen=""
wordcount=0
wordcount=0
punctcount=0
punctcount=0
alphabetic=[]
alphabetic=[]


loop do
loop do
  s=$stdin.gets
  s=$stdin.gets
  if s!="exit\n"
  if s!="exit\n"
    splitting+=separate_line(s) if should_split
    splitting+=separate_line(s) if should_split
    splitting+=separate_line(s) if should_split
    splitting+=separate_line(s) if should_split
    uppercase+=upcase(s) if should_uppercase
    uppercase+=upcase(s) if should_uppercase
    gsubhyphen+=replace_spaces(s) if should_subhyphen
    gsubhyphen+=replace_spaces(s) if should_subhyphen
    wordcount+=count_words(s) if should_wcount
    wordcount+=count_words(s) if should_wcount
    (alphabetic+=sort(s)).sort! if should_sort
    (alphabetic+=sort(s)).sort! if should_sort
    punctcount+=count_punct(s) if should_pcount
    punctcount+=count_punct(s) if should_pcount
  else
  else
    puts_results(splitting,uppercase,gsubhyphen,wordcount,punctcount,alphabetic)

    puts_results(splitting,uppercase,gsubhyphen,wordcount,punctcount,alphabetic)

    break
    break
  end
  end
end
end


#create a set of variables that we will assign boolean values to, and those bool
eans will dictate whether we calculate and print each result
#create a set of variables that we will assign boolean values to, and those bool
eans will dictate whether we calculate and print each result
=> #<File:hw10.rb>
irb(main):043:0> f=File.open "test.rb", "w"
=> #<File:test.rb>
irb(main):044:0> f.write "hand it a string, yo"
=> 20
irb(main):045:0> f.flush
=> #<File:test.rb>
irb(main):046:0> f.write "something else"
=> 14
irb(main):047:0> f.close
=> nil
irb(main):048:0> f
=> #<File:test.rb (closed)>
irb(main):049:0> f.write "seriously, an error"
IOError: closed stream
        from (irb):49:in `write'
        from (irb):49
        from C:/RailsInstaller/Ruby1.9.3/bin/irb:12:in `<main>'
irb(main):050:0> exit

C:\Homework>File.open "HW11b.rb"
'File.open' is not recognized as an internal or external command,
operable program or batch file.

C:\Homework>