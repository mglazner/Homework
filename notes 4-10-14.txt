notes 4-10-14

looking at web apps 

can output to a screen, a file and NOW Across a network to another computer taaa-daaaa! (a webpage)

a web browser is crafting a little piece of text that it sends to a particular server and everythign else you type into url bar

www.whatever.com is a textual represention of a unique IP address (computer or group of computers)

DNS domain name services is what maps from text name to IP address

all communication between computers is done numerically, by IP, the text names are just for human eyes

a rack application is an object

the only thing req for a rack opp is that it implements a method named 'call' that takes a variable called 'env' for environment

localhost:port

call is responsible for returning an array with exactly 3 items

def call(env)
[status code of the response/request, headers(bits of data that get sent along back with the response that you don't see, we probably can leave blank for now, returned as hashes AAAAAND the body of the response, what is the actual text you want to hand back the web browser for it to display]

env=environment is address, addt'l info, env is a hash

##HOMEWORK ASSIGNMENT##

have the server return different content for two different urls (also called uri occasionally in programming)
url1  /ironman, response should be red & gold
url2  /captamerica, response should be blue & red & white
any other url will return an error --: status code of 404, file not found

thread"=>true, "rack.multiprocess"=>false, "rack.run_once"=>false, "rack.url_sch
eme"=>"http", "HTTP_VERSION"=>"HTTP/1.1", "REQUEST_PATH"=>"/ironman"}

path request is in the hash in the env

call method always has to return an array in the form of [200,{"Content-Type"=>"text"},["some string"]]