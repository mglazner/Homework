PRINT A HASH WITH KEYS FOR EACH VOWEL, WHERE EACH ITEM IS THE COUNT OF HOW MANY TIMES THAT VOWEL IS IN THE STRING, IN TWO DIFFERENT WAYS, THE FIRST TIME WITH CREATING AND INITIALIZING THE HASH OUTSIDE THE LOOP, THE SECOND TIME, CREATING/INITIALIZING THE LOOP INSIDE THE LOOP

vowels=["a", "e", "i", "o", "u"]
string="another big long string that has lots of characters"
h={}

Q1

vowels.each do |m|
h[m]=s.count(m)
end
=>["a", "e", "i", "o", "u"]
puts h
h={"a"=>5, "e"=>2, "i"=>2, "o"=>4, "u"=>0}


Q2

vowels.each do |n|
j={}
j[n]=s.count(n)
puts j
end
{"a"=>5}
{"e"=>2}
{"i"=>2}
{"o"=>4}
{"u"=>0}
=> ["a", "e", "i", "o", "u"]

//clearly not quite what was assigned, but I wasn't entirely sure what to do with a local variable that doesn't exist outside the loop...

